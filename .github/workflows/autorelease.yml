name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
    branches: ["main"]

jobs:

  linux-windows-build:
    name: MinGW Build
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:

    - name: OS Packages 
      run: |
        sudo apt-get update --fix-missing && sudo apt-get -y install \
        git build-essential zlib1g zlib1g-dev wget zip unzip \
        mingw-w64 binutils-mingw-w64 g++-mingw-w64 gcc-multilib

    - name: Minisign
      run: |
        MINISIGN_TMP=`mktemp -d`
        cd $MINISIGN_TMP
        wget https://github.com/aead/minisign/releases/download/v0.2.0/minisign-linux-amd64.tar.gz
        tar xvf minisign-linux-amd64.tar.gz
        mv ./minisign ~/minisign

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Git Fetch Tags
      run: git fetch --prune --unshallow --tags -f

    - name: Build Package
      run: |
        make
        rm -f ./compiled/.gitkeep
        VERSION=$(git describe --tags --abbrev=0)
        cat find-module.json | jq ".version |= \"$VERSION\"" > ./compiled/find-module/extension.json
        cat find-proc-handle.json | jq ".version |= \"$VERSION\"" > ./compiled/find-proc-handle/extension.json
        cd ./compiled/find-module
        tar -czvf ../../find-module.tar.gz .
        cd ../find-proc-handle/
        tar -czvf ../../find-proc-handle.tar.gz .
      
    - name: Sign Package
      run: |
        touch ~/minisign.key && chmod 600 ~/minisign.key
        echo -e "${{ secrets.MINISIGN_PRIVATE_KEY }}" > ~/minisign.key

        MANIFEST1=$(cat ./compiled/find-module/extension.json | base64 -w 0)
        bash -c "echo \"\" | ~/minisign -s ~/minisign.key -S -m ./find-module.tar.gz -t \"$MANIFEST1\" -x find-module.minisig"

        MANIFEST2=$(cat ./compiled/find-proc-handle/extension.json | base64 -w 0)
        bash -c "echo \"\" | ~/minisign -s ~/minisign.key -S -m ./find-proc-handle.tar.gz -t \"$MANIFEST2\" -x find-proc-handle.minisig"

    - name: "Publish Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./find-module.minisig
          ./find-module.tar.gz
          ./find-proc-handle.minisig
          ./find-proc-handle.tar.gz
